var documenterSearchIndex = {"docs":
[{"location":"apidocs/","page":"-","title":"-","text":"","category":"page"},{"location":"apidocs/","page":"-","title":"-","text":"Modules = [NAssets]","category":"page"},{"location":"apidocs/#NAssets.Agent","page":"-","title":"NAssets.Agent","text":"Control Agent\n\n\n\n\n\n","category":"type"},{"location":"apidocs/#NAssets.Flow_Type","page":"-","title":"NAssets.Flow_Type","text":"Indicates the type of a flow within a path\n\n\n\n\n\n","category":"type"},{"location":"apidocs/#NAssets.GraphModel","page":"-","title":"NAssets.GraphModel","text":"Supported Graphs\n\n\n\n\n\n","category":"type"},{"location":"apidocs/#NAssets.MaintenanceInfo","page":"-","title":"NAssets.MaintenanceInfo","text":"It represents data structure for maintenance related info\n\n\n\n\n\n","category":"type"},{"location":"apidocs/#NAssets.OFMessage-Tuple{Int64,Int64,Int64,Int64,NAssets.DPacket}","page":"-","title":"NAssets.OFMessage","text":"Message with default reason: Forward\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.OFMessage-Tuple{Int64,Int64,Int64,NAssets.Ofp_Protocol,Int64}","page":"-","title":"NAssets.OFMessage","text":"Message with no input port\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.OFMessage-Tuple{Int64,Int64,Int64,NAssets.Ofp_Protocol,Tuple{Int64,Int64}}","page":"-","title":"NAssets.OFMessage","text":"Message with pair in data\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.SimNE","page":"-","title":"NAssets.SimNE","text":"Simulated Physical Network Element\n\n\n\n\n\n","category":"type"},{"location":"apidocs/#NAssets.SimpleAgState","page":"-","title":"NAssets.SimpleAgState","text":"Agent's state, including observed state of \nmonitoring/controlling asset\n\n\n\n\n\n","category":"type"},{"location":"apidocs/#NAssets.SimpleAssetState","page":"-","title":"NAssets.SimpleAssetState","text":"\"Real\" state of the asset\n\n\n\n\n\n","category":"type"},{"location":"apidocs/#NAssets.add_edges_gids!-NTuple{4,Any}","page":"-","title":"NAssets.add_edges_gids!","text":"add_edges_gids(g,lv,nbs_gids,gid)\n\nAdd edges between the local vertex lv and the list of gids (global ids passed) using property gid\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.add_geo_coordinates_to_graph!-Tuple{MetaGraphs.MetaGraph,String}","page":"-","title":"NAssets.add_geo_coordinates_to_graph!","text":"It annotates the graph with the coordinates obtained from the passed file name and location (location/name.csv). Annotating the graph is just adding attributes to the MetaGraph object passed.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.agent_step!-Tuple{NAssets.Agent,Any}","page":"-","title":"NAssets.agent_step!","text":"Progress control agents one step.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.agent_step!-Tuple{NAssets.SimNE,Any}","page":"-","title":"NAssets.agent_step!","text":"Progress SimNE one step.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.check_create_dir!-Tuple{Any}","page":"-","title":"NAssets.check_create_dir!","text":"Checks if a directory exists, otherwise create it.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.clear_cache!-Tuple{NAssets.Agent,Agents.AgentBasedModel}","page":"-","title":"NAssets.clear_cache!","text":"Clears cache of control agent\n\nTODO Opportunity to investigate ways to store relevant cache rather than clearing all\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.clear_pending_query!-Tuple{NAssets.SimNE,Agents.AgentBasedModel}","page":"-","title":"NAssets.clear_pending_query!","text":"clear queries requested by sne to controller that have expired, so the same query can be requested after some time model.ofmsg_reattempt\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.config-Tuple{Any}","page":"-","title":"NAssets.config","text":"config(bconfig)\n\nIt prepares a config object based on the plain configuration (bconfig) passed as parameter.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.controlled_sne_down!-Tuple{NAssets.Agent,Int64,Any}","page":"-","title":"NAssets.controlled_sne_down!","text":"It simulates a NE-controller link down  In reality this is the routine that checks heartbeats   from controlled NEs.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.create_agents!-Tuple{Any}","page":"-","title":"NAssets.create_agents!","text":"Simplest create agents\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.create_control_agents!-Tuple{Agents.AgentBasedModel}","page":"-","title":"NAssets.create_control_agents!","text":"Create control agents\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.create_csv_template-Tuple{Any,Any}","page":"-","title":"NAssets.create_csv_template","text":"Helper function to create a csv file template out of a given config object passed\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.create_pkt-Tuple{Int64,Int64,Any}","page":"-","title":"NAssets.create_pkt","text":"Create a packet using arguments\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.create_sim_asset_agents!-Tuple{Any}","page":"-","title":"NAssets.create_sim_asset_agents!","text":"Create simulated asset agents\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.create_subgraph-Tuple{Any,Any,Any}","page":"-","title":"NAssets.create_subgraph","text":"create_subgraph(egs,eqv,gid_prop)\n\nCreates a graph g (MetaGraph) for the given  edge list egs, where g represents a subgraph of a global graph. In eqv, every pair has the form: (lv,gv) where lv is the local vertex id and gv is the global vertex id. gid_prop indicates the property of g used to reference gv.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.create_subgraph-Tuple{Any,Any}","page":"-","title":"NAssets.create_subgraph","text":"create_subgraph(m,eqv)\n\nCreates a graph g (MetaGraph) for the given adjacency matrix m,  where g represents a subgraph of a global graph. The vector eqv, gives the tuples: (lv,gv) where lv is the local vertex id and gv is the global vertex id.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.delete_flow!-Tuple{NAssets.SimNE,Int64,Agents.AgentBasedModel}","page":"-","title":"NAssets.delete_flow!","text":"Delete all the flows that output to the given port\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.deteriorate!-Tuple{NAssets.SimNE,Agents.AgentBasedModel}","page":"-","title":"NAssets.deteriorate!","text":"Function to deteriorate a network element\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_confidence_check!-Tuple{Any,Any}","page":"-","title":"NAssets.do_confidence_check!","text":"Check confindence of a path @Deprecated (for time being)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_events_step!-Tuple{NAssets.Agent,Agents.AgentBasedModel}","page":"-","title":"NAssets.do_events_step!","text":"It processes scheduled events\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_match!-Tuple{NAssets.AGMessage,NAssets.Agent,Any}","page":"-","title":"NAssets.do_match!","text":"Processing for MATCH_PATH msg\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_match!-Tuple{Tuple{Int64,Float64,Float64,Array{Int64,N} where N},NAssets.AGMessage,NAssets.Agent,Any}","page":"-","title":"NAssets.do_match!","text":"Prepare MATCH reply\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_ne_down-Tuple{NAssets.Agent,NAssets.AGMessage,Any}","page":"-","title":"NAssets.do_ne_down","text":"It process a msg from a neighbor controller notifying a sne is down\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_query!-Tuple{NAssets.AGMessage,NAssets.Agent,Any}","page":"-","title":"NAssets.do_query!","text":"Query by neighbour control agent after receiving AGMessage\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_query!-Tuple{NAssets.OFMessage,NAssets.Agent,Any}","page":"-","title":"NAssets.do_query!","text":"Initial query by controller receiving OF message\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_query-Tuple{Int64,Tuple{Int64,Int64},MetaGraphs.MetaGraph,Dict{Tuple{Int64,Int64},Array{Tuple{Int64,Float64,Float64,Array{Int64,N} where N},N} where N}}","page":"-","title":"NAssets.do_query","text":"Query local calculated paths and local graph\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_receive_messages-Tuple{NAssets.Agent,Any}","page":"-","title":"NAssets.do_receive_messages","text":"Receives inter-agent messages\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_rul_predictions!-Tuple{NAssets.Agent,Array{Int64,N} where N,Agents.AgentBasedModel}","page":"-","title":"NAssets.do_rul_predictions!","text":"Run RUL predictions for the assets controlled by agent a\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_update_flows_from_changes!-Tuple{NAssets.Agent,Array{Int64,1},Agents.AgentBasedModel}","page":"-","title":"NAssets.do_update_flows_from_changes!","text":"It deals with prediction of unavailability (for a given time window) of a set of NEs under control.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.do_update_flows_from_path!-Tuple{NAssets.Agent,Array{Int64,1},Agents.AgentBasedModel}","page":"-","title":"NAssets.do_update_flows_from_path!","text":"Update flows of the snes controlled by the agent a and for the path given, \n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.drop_node!-Tuple{NAssets.SimNE,Agents.AgentBasedModel}","page":"-","title":"NAssets.drop_node!","text":"Removes asset node (sne) from the network\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.drop_packet!-Tuple{NAssets.SimNE}","page":"-","title":"NAssets.drop_packet!","text":"Add to the count of dropped packets for the given sne\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.exp_c-Tuple{Any,Any}","page":"-","title":"NAssets.exp_c","text":"Determines criteria for valid values to TTF for\nthe exponential function.\n\n    t₀: unused, defined to keep uniformity of function\n        (TODO: check if this can be removed)\n    t: value to evaluate\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.exp_f-Tuple{Any,Any,Any}","page":"-","title":"NAssets.exp_f","text":"Basic implementation of exponential deterioration function\naccording to:\n\n* T. Wang, J. Yu, D. Siegel, and J. Lee, “2008 International Conference on Prognostics and Health Management, PHM2008,” \n  2008 Int. Conf. Progn. Heal. Manag. PHM 2008, 2008.\n\n  * A. Salvador Palau, M. Dhada, and A. Parlikad, “Multi-Agent System architectures for collaborative prognostics,” \n  J. Intell. Manuf., 2019.\n\na: max expected value of condition/health indicator (i.e. 1 if normalised)\nb: curvature parameter\nt: remaining time-to-failure (generally calculated with exp_t function)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.exp_t-Tuple{Any,Any}","page":"-","title":"NAssets.exp_t","text":"Calculates remaining ttf(time-to-failure) for a given expected ttf\nand current t\nttf: expected time-to-failure\nt: current time\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.exp_ts-Tuple{Any,Any,Any}","page":"-","title":"NAssets.exp_ts","text":"Scales exponential function considering shifting for long term\nbehaviour.\n\nttf: expected time-to-failure\nt: value to scale\nd: units to shift to the right (near TTF)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.find_agent-Tuple{Any,Any}","page":"-","title":"NAssets.find_agent","text":"Find agent in the model given the id\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.forward!-Tuple{NAssets.OFMessage,NAssets.SimNE,Any}","page":"-","title":"NAssets.forward!","text":"It forwards packet to a host\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.forward!-Tuple{NAssets.OFMessage,NAssets.SimNE,NAssets.SimNE,NAssets.Ofp_Protocol,Any}","page":"-","title":"NAssets.forward!","text":"It forwards packet to another sne\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.generate_sensor_series-NTuple{6,Any}","page":"-","title":"NAssets.generate_sensor_series","text":"It generates the sensor time series for a given asset     ttf:time-to-failure     ot: off-time\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.generate_traffic!-Tuple{Any}","page":"-","title":"NAssets.generate_traffic!","text":"Traffic generation per tick #TODO Implement this function as per required\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.generate_ttf_series-Tuple{}","page":"-","title":"NAssets.generate_ttf_series","text":"It illustrates how to use the other TTE functions\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_address-Tuple{Int64,LightGraphs.AbstractGraph}","page":"-","title":"NAssets.get_address","text":"Given a SimNE id it returns its ntw node address.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_ag_msg-Tuple{Any}","page":"-","title":"NAssets.get_ag_msg","text":"Return total of control messages exchanged by agents\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_default_config-Tuple{}","page":"-","title":"NAssets.get_default_config","text":"get_default_config()\n\nIt returns the default config for simulation.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_dropping_times-NTuple{5,Any}","page":"-","title":"NAssets.get_dropping_times","text":"return the times when random assets will fail according to total sim time (N), quantity (q) of assets and proportion. It receives also random \n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_edge_plot_props_step-Tuple{MetaGraphs.MetaGraph,Int64,Dict{Symbol,Symbol}}","page":"-","title":"NAssets.get_edge_plot_props_step","text":"labels is a dictionary where keys are: :tpt for througput and :up for node alive.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_eid-Tuple{Int64,Any}","page":"-","title":"NAssets.get_eid","text":"Given a ntw node address it returns the corresponding SimNE id\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_end_points-Union{Tuple{G}, Tuple{Any,G,Float64}} where G<:LightGraphs.AbstractGraph","page":"-","title":"NAssets.get_end_points","text":"get_end_points(seed,g::G,coverage::Float64)\n\nGiven a set of paths, return the start and end vertices\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_exclusions-Tuple{NAssets.OFMessage,Any}","page":"-","title":"NAssets.get_exclusions","text":"Get query exclusions for a given message\n@Deprecated\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_graph-Tuple{Any,Any,Any}","page":"-","title":"NAssets.get_graph","text":"get_graph(seed,size,topo;k=0,B=0,adj_m_csv=nothing,sep=';')\n\nHelper function to get underlying graph, passing either the size and topo required or the name adj_m_csv of the csv file with the adjacency matrix and the separator.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_live_snes-Tuple{Any}","page":"-","title":"NAssets.get_live_snes","text":"Return SNEs that are up\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_live_snes-Tuple{NAssets.Agent,Any}","page":"-","title":"NAssets.get_live_snes","text":"Return SNEs controlled by Agent a that are up\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_next_maintenance_due-Tuple{NAssets.SimNE,Agents.AgentBasedModel}","page":"-","title":"NAssets.get_next_maintenance_due","text":"\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_random_packets_to_process-Tuple{Any,Any,Any}","page":"-","title":"NAssets.get_random_packets_to_process","text":"Get a random number of packets to be processed by a sne on a given tick  defined by the sequence passed (tick + sne_id)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_run_label-Tuple{Any}","page":"-","title":"NAssets.get_run_label","text":"get_run_label(config)\n\nIt obtains the label for a simulation run based on the configuration parameters: config. Label is based on the graph model of the underlying controlled network and the control network, plus the size, seed and maintenance policy.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_subgraph-Tuple{Any,Any,Any}","page":"-","title":"NAssets.get_subgraph","text":"get_subgraph(g,nodes,id_prop)\n\nIt generates subgraph for the vector of nodes passed. This is similar to egonet but it keeps custom indexes given in id_prop parameter.\n\ng: graph\nnodes: It receives vector of controlled assets (nodes)\nid_prop: could be either :eid (simNE) or :aid (agent)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_throughput-Tuple{Array{Float64,1},Int64}","page":"-","title":"NAssets.get_throughput","text":"Calculates throughput for the given trajectory\n- packet/bytes trajectory \n- interval: time steps\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.get_throughput_up-Tuple{NAssets.SimNE,Any}","page":"-","title":"NAssets.get_throughput_up","text":"It filters throughput only when the given sne is up\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.has_prop_vertex-Tuple{Any,Any,Any}","page":"-","title":"NAssets.has_prop_vertex","text":"has_prop_vertex(value,g,prop)\n\nCheck if vertex of the given graph g has property prop with value value.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.in_packet_handler-Tuple{NAssets.Agent,NAssets.OFMessage,Any}","page":"-","title":"NAssets.in_packet_handler","text":"msg: SimNE.id, in_port, DPacket\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.in_packet_processing-Tuple{Agents.AbstractAgent,Any}","page":"-","title":"NAssets.in_packet_processing","text":"Packet processing per tick per agent\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.init_agent!-Tuple{NAssets.Agent,Any}","page":"-","title":"NAssets.init_agent!","text":"Initialise control agents\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.init_agent!-Tuple{NAssets.SimNE,Any}","page":"-","title":"NAssets.init_agent!","text":"Initialise sne agents\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.init_array_vectors-Tuple{Any,Any,Any}","page":"-","title":"NAssets.init_array_vectors","text":"Initialize an array of dimensions d1 x d2 that contains vectors of type T\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.init_step_state!-Tuple{Agents.AgentBasedModel}","page":"-","title":"NAssets.init_step_state!","text":"Initialise state of model for a given step\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.initialize-Tuple{Any}","page":"-","title":"NAssets.initialize","text":"Basic initialization\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.install_flow!","page":"-","title":"NAssets.install_flow!","text":"Function that makes a control agent trigger a flow install in the sne\n\n\n\n\n\n","category":"function"},{"location":"apidocs/#NAssets.install_flow!-Tuple{Flow,NAssets.SimNE,Any}","page":"-","title":"NAssets.install_flow!","text":"Install the given flow in the sne. I t does not check if the flow is valid (the port is available), as this flow could be installed for the future.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.is_in-Tuple{Int64,Any}","page":"-","title":"NAssets.is_in","text":"Helper function that checks if x value is in vector V\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.is_invalid_path-Tuple{Any,Any,Any}","page":"-","title":"NAssets.is_invalid_path","text":"Check if path is invalid according to local knowledge. It does not mean is valid as this agent might not have all info to check validity.  Only flags invalid if 100% sure.  cnes:controlled nes by this agent (a)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.isless_paths-Tuple{Any,Any}","page":"-","title":"NAssets.isless_paths","text":"isless_paths(a,b)\n\nUsed to compare and ordering tuples of paths where tuples is of the form (tick,score)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.join_subgraphs-Tuple{Any,Any}","page":"-","title":"NAssets.join_subgraphs","text":"join_subgraphs(g1,g2)\n\nIt joins two subgraphs assuming they are both part of a global graph. The id in the global graph is given by property :eid.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.lineal_d-Tuple{Any,Any,Any}","page":"-","title":"NAssets.lineal_d","text":"Linear degradation m: degradation slope b: expected life t: current time\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.link_down!-Tuple{NAssets.SimNE,Int64,Any}","page":"-","title":"NAssets.link_down!","text":"It simulates operations happening in a network asset when the link corresponding to the given dpnid goes down. sne is up and node went down is dpnid.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.link_up!-Tuple{NAssets.SimNE,Int64,Any}","page":"-","title":"NAssets.link_up!","text":"It simulates operations happening in a network asset when the link corresponding to the given rjnid rejoins. sne is up and node re-joining is rjnid.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.load_base_cfgs-Tuple{Any}","page":"-","title":"NAssets.load_base_cfgs","text":"load_base_cfgs\n\nIt loads the simulation config parameters from csv file which location and name is passed. I passes a list with delimiters (delims) used in the file from outer, to inner. Default=[';',',']\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.load_control_graph-Tuple{MetaGraphs.MetaGraph}","page":"-","title":"NAssets.load_control_graph","text":"load_control_graph(graph::MetaGraph)\n\nIt Loads(initialises) the graph of the control system\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.load_graph_from_csv-Tuple{String}","page":"-","title":"NAssets.load_graph_from_csv","text":"loadgraphfrom_csv\n\nThis function loads a graph from csv file containing the adjacency matrix of the graph. The file location and name is passed as argument (location/name.csv) together with the separator used in the csv e.g. ';' or ','.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.load_network_graph-Tuple{MetaGraphs.MetaGraph}","page":"-","title":"NAssets.load_network_graph","text":"load_network_graph(graph::MetaGraph)\n\nIt loads (initialise) the graph of the network to control\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.load_run_data-Tuple{Any,String}","page":"-","title":"NAssets.load_run_data","text":"It loads serialised data for all the runs in the passed directory \n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.log_c-Tuple{Any,Any}","page":"-","title":"NAssets.log_c","text":"Determines criteria for valid values to TTF for\nthe logistics function.\n\n    t₀: initial value for the cycle/phase\n    t: value to evaluate\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.log_info-NTuple{4,Any}","page":"-","title":"NAssets.log_info","text":"logs only for a given agent\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.log_info-Tuple{Any,Any,Any}","page":"-","title":"NAssets.log_info","text":"logs an info msg for tick and agent_id passed\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.log_info-Tuple{Any,Any}","page":"-","title":"NAssets.log_info","text":"logs an info msg for tick passed\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.log_info-Tuple{Any}","page":"-","title":"NAssets.log_info","text":"Log info msg\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.maintenance_cost-NTuple{7,Any}","page":"-","title":"NAssets.maintenance_cost","text":"Maintenance cost at a given time step:\n\nrul_mnt: rul of an asset (sne) of the network that is undergoing maintenance. If rul == 0., then it is corrective maintenance, if rul > 0, then it is preventive maintenance. Otherwise (-1) no maintenance ongoing.\n\nis_start: indicates if maintenance has just started so time-independent costs are added\n\nis_active: indicates if the asset was active in the network before maintenance started, i.e. was part of an active flow.\n\ndt_cost: downtime cost, cost of service flow/production loss per time step, time-dependent. Added when corrective maintenance.\n\nl_cost: labour cost per time step, time-dependent. \n\np_cost: parts costs for maintenance regardless of the time it takes, time-independent, only added when maintenance starts.\n\nr_cost: cost of loss of remaining life. Added when preventive maintenance. \n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.mark_reprocess_of_msg!-Tuple{NAssets.Agent,NAssets.AGMessage}","page":"-","title":"NAssets.mark_reprocess_of_msg!","text":"When a solution is received for a query it marks the pending msg so it can be reprocessed in the next tick\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.mnt_in_range-Tuple{Array{Int64,2},Int64,Int64}","page":"-","title":"NAssets.mnt_in_range","text":"Return mnt jobs in a given range for the passed plan\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.model_step!-Tuple{Any}","page":"-","title":"NAssets.model_step!","text":"It advance model one step. Agents are progressed here to ensure that one action is perform in\nall agents before the next action is performed in all agents, instead of having one action\nexecuted in some agents and then some start with second action.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.next_amid!-Tuple{Any}","page":"-","title":"NAssets.next_amid!","text":"Next agent message's id\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.next_event_time-Tuple{Any,Any}","page":"-","title":"NAssets.next_event_time","text":"It returns the next event time for a given random number and rate of events\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.next_ofmid!-Tuple{Any}","page":"-","title":"NAssets.next_ofmid!","text":"Next Open Flow message id\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.nnoised-NTuple{4,Any}","page":"-","title":"NAssets.nnoised","text":"Add random normally distributed  noise to a given value.  Ensures that always:  0 ⋜  v + ϵ ⋜ y, for a random noise ϵ. \n\nv: original value without noise\nϵₛ: noise standard deviation\nϵ₀: noise μ\ny:  max value the noised value can take\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.node_rejoin_handler-Tuple{Any,Any,Any}","page":"-","title":"NAssets.node_rejoin_handler","text":"It handles msg from sne when a neighbor sne has rejoined the underlying network. \n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.ntw_link_step!-Tuple{Tuple{Int64,Int64},Any}","page":"-","title":"NAssets.ntw_link_step!","text":"This function progresses one step each link of the sne network.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.pending_pkt_handler-Tuple{NAssets.SimNE,Any}","page":"-","title":"NAssets.pending_pkt_handler","text":"It enqueues packets that were not processed in \nprevious time steps. It discard packets according to defined size of the queue.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_asset_networks-Tuple{Any}","page":"-","title":"NAssets.plot_asset_networks","text":"Plots the underlying controlled network\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_base_map-Tuple{Any}","page":"-","title":"NAssets.plot_base_map","text":"Plots the bare base map using the shp file passed\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_ctl_network_mono-Tuple{Any}","page":"-","title":"NAssets.plot_ctl_network_mono","text":"Plots a single agent control network\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_ctl_network_multi-Tuple{Any}","page":"-","title":"NAssets.plot_ctl_network_multi","text":"Plots a multiagent control network\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_ctl_throughput-Tuple{Any}","page":"-","title":"NAssets.plot_ctl_throughput","text":"Plots message exchange among control agents\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_empty-Tuple{}","page":"-","title":"NAssets.plot_empty","text":"Plots an empty placeholder\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_geo_network-Tuple{Any,Any}","page":"-","title":"NAssets.plot_geo_network","text":"Plot network on top of the given geo plot passed\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_geo_network-Tuple{Any,MetaGraphs.MetaGraph}","page":"-","title":"NAssets.plot_geo_network","text":"Plot network on top of the given geo plot passed\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_geo_network_step-Tuple{Any,MetaGraphs.MetaGraph,Array{Array{NetworkAssetState,1},1},Any}","page":"-","title":"NAssets.plot_geo_network_step","text":"It plots one step at a time, receiving all steps in a vector of vector of NetworkAssetState\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_geo_network_step-Tuple{Any,MetaGraphs.MetaGraph,DataFrames.DataFrame,Any}","page":"-","title":"NAssets.plot_geo_network_step","text":"It plots one step at a time, receiving all steps in a DataFrame with data coming from NetworkAssetState\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_packet_loss-Tuple{Any}","page":"-","title":"NAssets.plot_packet_loss","text":"Plots packet loss of the underlying controlled network\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_subg-Tuple{Any}","page":"-","title":"NAssets.plot_subg","text":"Plots a subgraph that is part of a greater one global ids in property :eid.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_throughput-Tuple{Any}","page":"-","title":"NAssets.plot_throughput","text":"Plots throughput of the underlying controlled network\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_tpt_step-Tuple{Array{Array{NetworkAssetState,1},1},Array{Array{NetworkAssetState,1},1},Array{ModelState,1},Int64}","page":"-","title":"NAssets.plot_tpt_step","text":"It plots throughput and reference for one step of an animation of t timesteps\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plot_tpt_step-Tuple{Array{Array{NetworkAssetState,1},1},Array{Tuple{Int64,Int64},1},Int64}","page":"-","title":"NAssets.plot_tpt_step","text":"It plots throughput for one step of an animation of t timesteps\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.plotabm_networks-Tuple{Any}","page":"-","title":"NAssets.plotabm_networks","text":"Main plotting function calls others\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.port_delete_handler-Tuple{NAssets.Agent,NAssets.OFMessage,Any}","page":"-","title":"NAssets.port_delete_handler","text":"It processes OF msg sent by controlled NE  to\nremove a given port from its graph\nThis is done by the agent controlling the neighbour of a dropped node\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.prepare_service_paths-Tuple{Any,Any}","page":"-","title":"NAssets.prepare_service_paths","text":"Function that prepare serialised time series of control agents for plotting\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.process_msg!-Tuple{NAssets.SimNE,NAssets.OFMessage,Any}","page":"-","title":"NAssets.process_msg!","text":"Processes msgs to SimNE\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.process_route!-Tuple{NAssets.Agent,Any,Agents.AgentBasedModel}","page":"-","title":"NAssets.process_route!","text":"It processes a route received from optimisation algorithm\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.push_ep_entry!-Tuple{NAssets.SimNE,Tuple{Int64,String}}","page":"-","title":"NAssets.push_ep_entry!","text":"Push a new port edge pair\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.push_msg!-Tuple{NAssets.SimNE,NAssets.OFMessage}","page":"-","title":"NAssets.push_msg!","text":"push OF message to from simulated host to dst SimNE\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.push_msg!-Tuple{NAssets.SimNE,NAssets.SimNE,NAssets.OFMessage,Any}","page":"-","title":"NAssets.push_msg!","text":"push OF message to from src SimNE to dst SimNE\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.push_pending!-Tuple{Agents.AbstractAgent,NAssets.OFMessage}","page":"-","title":"NAssets.push_pending!","text":"It records messages pending to process in a given tick\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.query_paths-Tuple{Any,Any,Any}","page":"-","title":"NAssets.query_paths","text":"query_paths(lg,s,d)\n\nA wrapper of the Julia Graph ecosystem shortest_paths functions. It searches for a path between nodes with global id (eid) s and  d in the local graph lg. It assumes property :eid of each vertex is global id of vertex\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.query_paths-Tuple{Any,Any}","page":"-","title":"NAssets.query_paths","text":"query_paths(lg,t)\n\nPath search in local graph lg, receiving source s and destination d in a tuple t, such as t:(s,d).\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.record_active_flow!-NTuple{4,Any}","page":"-","title":"NAssets.record_active_flow!","text":"It records active flow for reporting active path\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.record_benchmark!-NTuple{8,Any}","page":"-","title":"NAssets.record_benchmark!","text":"Records benchmark for a query\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.rejoin_node!-Tuple{Any,Int64}","page":"-","title":"NAssets.rejoin_node!","text":"Rejoin node to network according to \n\nbase_network\ncurrent_network\nrejoining node id\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.remove_drop_sne!-Tuple{NAssets.Agent,Int64,Int64}","page":"-","title":"NAssets.remove_drop_sne!","text":"It removes a dropped sne node from local paths and graph\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.route_traffic!-Tuple{NAssets.SimNE,NAssets.OFMessage,Any}","page":"-","title":"NAssets.route_traffic!","text":"It routes packets according to installed flow rules. There could be rules that are not valid in the current time step but will be valid later.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.run_model-Tuple{Any,Any}","page":"-","title":"NAssets.run_model","text":"Simple run model function\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.run_sim-Tuple{Any}","page":"-","title":"NAssets.run_sim","text":"run_sim(config)\n\nBased on config parameters received it creates objects required to trigger simulation run. \n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.schedule_event!-Tuple{NAssets.Agent,NAssets.CTL_Event,Int64,Array{Int64,1}}","page":"-","title":"NAssets.schedule_event!","text":"Schedules an event of type type on the given agent a at time time, affecting the snes with ids: snes.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.schedule_event!-Tuple{NAssets.Agent,NAssets.CTL_Event,Int64}","page":"-","title":"NAssets.schedule_event!","text":"Schedules an event of type type on the given agent a at time time.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.score_path-Tuple{Any}","page":"-","title":"NAssets.score_path","text":"score_path(path)\n\nWrapper the path score function. It gives a score to the given path, initially only based on length of path\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.set_down!-Tuple{NAssets.Agent}","page":"-","title":"NAssets.set_down!","text":"Set controller agent down\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.set_up!-Tuple{NAssets.Agent}","page":"-","title":"NAssets.set_up!","text":"Set controller agent up\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.single_run-Tuple{Any}","page":"-","title":"NAssets.single_run","text":"single_run(config) -> ctl_ags,ne_ags,model\n\nIt runs a single simulation with the passed configuration, returning simulation data in ctl_ags,ne_ags,model. Optionally logging to a  file if parameter log_to_file set to true.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.soft_remove_vertex-Tuple{LightGraphs.AbstractGraph,Int64}","page":"-","title":"NAssets.soft_remove_vertex","text":"soft_remove_vertex(g::AbstractGraph,dpn_id::Int)\n\nGiven the graph g, this function creates a deep copy of g and removes all the edges of the vertex whose global id (eid) is dpn_id and returns the new graph. The vertex whose id is dpn_id is only disconnected from the graph.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.start_mnt!-Tuple{NAssets.Agent,NAssets.SimNE,Agents.AgentBasedModel}","page":"-","title":"NAssets.start_mnt!","text":"start_mnt!(a::Agent,sne::SimNE,model::ABM)\n\nIt simulates start of maintenance.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.stop_mnt!-Tuple{NAssets.Agent,NAssets.SimNE,Agents.AgentBasedModel}","page":"-","title":"NAssets.stop_mnt!","text":"stop_mnt!(a::Agent,sne::SimNE,model::ABM)\n\nIt simulates completion of maintenance, refilling RUL and rejoining asset to the network.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.to_local_vertex-Tuple{Any,Any,Symbol}","page":"-","title":"NAssets.to_local_vertex","text":"to_local_vertex(lg,gv,gid)\n\nIt obtains the local id of a vertex in graph lg given its global gv in property in gid\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.to_local_vertex-Tuple{Any,Any}","page":"-","title":"NAssets.to_local_vertex","text":"to_local_vertex(lg,eid)\n\nIt obtains id of vertex in a local graph lg given vertex's global eid set to property :eid\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.trigger_of_event!-Tuple{Int64,NAssets.Agent,Any,NAssets.Ofp_Event,Any}","page":"-","title":"NAssets.trigger_of_event!","text":"A controller agent is notified of an event happening in the controlled element\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.trigger_random_node_drops!-Tuple{Agents.AgentBasedModel}","page":"-","title":"NAssets.trigger_random_node_drops!","text":"Triggers random failures on active nodes. This function is coupled to the model as it detects nodes that are active and make sure disruption happen to some of those nodes. If decoupled, cleaner, but then requires to know in advance what paths are used at every time, to make sure that dropping nodes are always active. \n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.update_addresses_removal!-Tuple{Int64,Any}","page":"-","title":"NAssets.update_addresses_removal!","text":"Update (ntw node) addresses of SimNE agents after removal of a given SimNE\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.update_maintenance_plan!-Tuple{NAssets.Agent,Array{Int64,N} where N,Agents.AgentBasedModel}","page":"-","title":"NAssets.update_maintenance_plan!","text":"update_maintenance_plan!(a::Agent,mnt_policy::Type{PreventiveM},model::ABM)\n\nIt schedules maintenance events (start/stop maintenance) for assets under control of a that are configured with preventive or predictive mnt_policy\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.update_maintenance_plan!-Tuple{NAssets.Agent,Type{NAssets.PredictiveM},Agents.AgentBasedModel}","page":"-","title":"NAssets.update_maintenance_plan!","text":"update_maintenance_plan!(a::Agent,mnt_policy::Type{PreventiveM},model::ABM)\n\nIt schedules maintenance events (start/stop maintenance) for assets under control of a that are configured with predictive mnt_policy with maintenance planning running in python.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.values_f-NTuple{9,Any}","page":"-","title":"NAssets.values_f","text":"Generates the time series until failure of an asset, given \nthe provided parameters:\n\nttf: expected time-to-failure\nn: maximum number of cycles the asset can last\nΔᵩ: Delta of number of time steps that are reduced as the asset\n    reaches a new cycle/phase\nϵₛ: Standard deviation of the gaussian noise \nf: function to generate values until ttf\nparams: params required by the f\ntsf: function to scale t for the given function\ntse: extra parameter required by tsf\nf_c: function that defines criteria for a valid value in the time series.\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.wb_t-Tuple{Any,Any,Any}","page":"-","title":"NAssets.wb_t","text":"Weibull scaling function  ttf: expected time-to-failure  γ: factor to tune max y (yₙ) value, e.g. for max y=1, with ttf =100,  λ=0.5, κ=05 => γ=8\n\nTODO: check if γ might be calculated from ttf, λ and κ\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.wb_ts-NTuple{4,Any}","page":"-","title":"NAssets.wb_ts","text":"Scales weibull input t value considering shifting \nfor long term behaviour\n\nttf: expected time-to-failure\nγ: factor to tune max y (yₙ) value, e.g. for max y=1, with ttf =100,\nλ=0.5, κ=05 => γ=8\nd: units to shift to the right (near TTF)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.weibull_f-Tuple{Any,Any,Any}","page":"-","title":"NAssets.weibull_f","text":"Basic implementation of Weibull function with 2-parameters\nκ: shape parameter, κ > 0\nλ: scale parameter, λ > 0\nt: current time (generally calculated with wb_t function)\n\n\n\n\n\n","category":"method"},{"location":"apidocs/#NAssets.xᵩ-Tuple{Any,Any,Any}","page":"-","title":"NAssets.xᵩ","text":"Introduces a variation on the x value according to the phase (ϕ) Used concretely for long-term TTF, we assume:     * An asset has expected TTF (x)     * After TTF the asset can be repaired or maintained and then will       operate for a number of cycles/phases.     * The current cycle/phase is given by ϕ     * After every phase ϕ, the asset reduces its TTF by Δᵩ\n\n\n\n\n\n","category":"method"},{"location":"dependencies/#List-of-packages-used-by-NAssets.jl","page":"List of packages used by NAssets.jl","title":"List of packages used by NAssets.jl","text":"","category":"section"},{"location":"dependencies/","page":"List of packages used by NAssets.jl","title":"List of packages used by NAssets.jl","text":"NAssets use different versions of the following packages: ","category":"page"},{"location":"dependencies/","page":"List of packages used by NAssets.jl","title":"List of packages used by NAssets.jl","text":"Agents\nMetaGraphs\nAgentsPlots\nPlots\nLightGraphs\nSimpleWeightedGraphs\nGraphPlot\nGraphRecipes\nNetworkLayout\nTables\nDataFrames\nCSV\nJSON\nSerialization\nDelimitedFiles\nBritishNationalGrid\nZipFile\nShapefile\nRandom\nMatch\nLinearAlgebra\nStatsBase\nDistributions\nStatsPlots\nSparseArrays\nLaplacians\nDataStructures\nRollingFunctions\nBenchmarkTools\nStatistics\nLogging\nLoggingExtras\nLoggingFacilities\nDates\nTimeZones\nPyCall","category":"page"},{"location":"examples/example_1/#Beginner-Example","page":"Beginner Example","title":"Beginner Example","text":"","category":"section"},{"location":"examples/example_1/","page":"Beginner Example","title":"Beginner Example","text":"The src code of this example is available in the examples folder.","category":"page"},{"location":"examples/example_1/","page":"Beginner Example","title":"Beginner Example","text":"Every simulation in NAssets requires a configuration object. This is Julia Tuple object:","category":"page"},{"location":"examples/example_1/","page":"Beginner Example","title":"Beginner Example","text":"bcfg = (\n        ntw_topo = 2,\n        size = 5,\n        ctl_model = 1, \n        n_steps = 80, \n        traffic_dist_params = [1.0, 0.05], \n        ntw_services = [(3, 5), (1, 4)] \n        )","category":"page"},{"location":"structure/#NAssets.jl-Structure","page":"NAssets.jl Structure","title":"NAssets.jl Structure","text":"","category":"section"},{"location":"structure/","page":"NAssets.jl Structure","title":"NAssets.jl Structure","text":"core: structs and main graph functions\nctl: functions used by the control agent(s)\nagent_controljl: operation of control agent and communication between agents\nqueries_basicmultiplejl : queries used by the control agents to find paths.\neve: functions for triggering artificial events on the asset network, for example random failures.\nmodel: Main ABM functions including agent and model steps.\nntw: Network Protocol Functions including minimal implementation of flows and actions based on OpenFlow.\nphy: Physical model for asset deterioration and maintenance.\nutils: General util functions used throughout.","category":"page"},{"location":"structure/","page":"NAssets.jl Structure","title":"NAssets.jl Structure","text":"Back to index","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = NAssets","category":"page"},{"location":"#NAssets.jl-(Networked-Assets)","page":"Home","title":"NAssets.jl (Networked Assets)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: NAssets)","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"NAssets.jl enables simulation of Networked Assets with a multi-model & multi-layer perspective. A NAssets.jl simulation is built from an underlying network of assets and a control system. The control system is built from agents, either one agent or multiple. In case of multiple agents, the control system is modelled as a control network. Hence, assets and control agent can have their own topology and characteristics.","category":"page"},{"location":"#Underlying-Network-of-Assets","page":"Home","title":"Underlying Network of Assets","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Assets are connected according to a defined topology. Traffic is simulated to flow along the network according to the topology. Likewise, every asset deteriorates over time with implications in the traffic flow and the network dynamics. Moreover, arbitrary disruption events (e.g. dropping nodes) can be triggered. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"In NAssets.jl both nodes and links can be heterogeneous with different capacities or characteristics (e.g. deterioration functions). The assets are initially thought to be Network Elements of a telecommunication infrastructure, however, various characteristics, such as the dynamics of asset deterioration, is common to other type of networks.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The assets in NAssets.jl are inspired by OpenFlow switches and they route data packets across the network.The routing is done according to the packet forwarding tables that each asset holds. Each entry of this table is a forwarding rule indicates which port to use to forward an incoming packet with a given destination. For example, an asset A3, has a table with the pair A5 - 1, then it indicates that packets that A3 receives with destination to asset A5, will be forwarded through port 1. This port will lead directly or indirectly to A5, depending on the network topology.","category":"page"},{"location":"#Control-System-Model","page":"Home","title":"Control System Model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The control system is built from at least one control agent. Depending on the topology, one control agent can be responsible of controlling one or multiple assets. Control agents have responsibilities at different levels:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Traffic flow operation: Control agents determine the path to use for packet routing and they install forwarding rules on the assets under control according to the paths. Path calculation requires two elements:\nA graph to calculate the path from. This is the graph of the underlying network of assets. This graph is not the actual graph of the network of assets but the graph known by the control system. In the most complete case, a centralised control system with an individual agent will have full visibility of the underlying network. On the other side, in a distributed control system agents have partial/local visibility of the underlying network of assets and they exchange messages via the control network to collectively learn/discover the graph of the underlying network. The algorithm implemented for graph learning is based on a simple diffusion process [1].\nAn algorithm for path calculation.  By default based on Yen's shortest path algorithm provided by Graph.jl ecosystem. \nMaintenance operation: Control agents monitor condition of assets, plan and trigger maintenance operations according to parameters defined. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"<a name=\"1\">[1]</a> Babaoglu, Ozalp, et al. \"Design patterns from biology for distributed computing.\" ACM Transactions on Autonomous and Adaptive Systems (TAAS) 1.1 (2006): 26-66. ","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Multi-model simulation of networks of assets. Models currently supported are:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Asset Network Model : Different off-the-shelf network topologies for asset connectivity. Integration with Julia Graphs ecosystem for functions generating random topologies plus ability to define own topologies passing the adjacency matrix as a csv file.\nAgent Network Model: NAssets.jl assumes agents are controlling the Asset Network. Agent-based model is built on top of Agents.jl. Different off-the-shelf network topologies for agent network interaction are provided. Integration with Julia Graphs ecosystem for functions generating random topologies plus ability to define own topologies passing the adjacency matrix in a csv file.\nNetwork Protocol Model: NAssets.jl are also Network Elements able to route data packets across the network. NAssets.jl provide a minimal implementation of flow tables and control actions inspired by OpenFlow protocol.\nPhysical Model: NAssets.jl deteriorate along the time following a given deterioration function. Initially a simple linear function is used but other functions can be implemented and plugged into the model.\nMaintenance Model: Different maintenance strategies can be defined for the NAssets. For example, corrective and preventive.\nEvents Model: NAssets.jl support scheduling of events for example starting a maintenance activity or randomly simulate failures in the network of assets. \nGeographical Model: NAssets.jl are able to store geo-references. Initially simple coordinates are supported and used in plots and animations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Models are defined in functions following the structure explained here.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is in Julia's package list. Install it using this command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg; Pkg.add(\"https://github.com/mperhez/NAssets.jl\")","category":"page"},{"location":"#Available-Parameters","page":"Home","title":"Available Parameters","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The full list of available parameters to configure NAssets.jl simulations is here.","category":"page"},{"location":"#Examples","page":"Home","title":"Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Basic networked asset simulation","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Function documentation available here","category":"page"},{"location":"#Dependencies","page":"Home","title":"Dependencies","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"List of packages used by NAssets.jl","category":"page"},{"location":"#Use-Cases","page":"Home","title":"Use Cases","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"NAssets.jl can be used to simulate complex scenarios of traffic re-routing and network maintenance in digital network infrastructures. See for example Integrating Asset Management and Traffic Engineering","category":"page"},{"location":"#Contributors","page":"Home","title":"Contributors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Marco Perez Hernandez\nAjith Kumar Parlikad\nManuel Herrera\nAlena Puchkova","category":"page"},{"location":"#Credits-/-Acknowledgement","page":"Home","title":"Credits / Acknowledgement","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"NAssets.jl was developed in the Asset Management Group of the DIAL Laboratory of the University of Cambridge. Initial development took place in the context of the NG-CDI programme funded by BT and EPSRC.","category":"page"},{"location":"parameters/","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"<style> table th:first-of-type {     width: 15%; } table th:nth-of-type(2) {     width: 20%; } table th:nth-of-type(3) {     width: 10%; } table th:nth-of-type(4) {     width: 55%; } </style>","category":"page"},{"location":"parameters/#NAssets-Simulation-Parameters","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"","category":"section"},{"location":"parameters/#General","page":"NAssets Simulation Parameters","title":"General","text":"","category":"section"},{"location":"parameters/","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"Param Domain Default Description\nntw_topo 0, (2-7) 2 Used to define the topology of the underlying network of assets. This should be an integer linked to the GraphModel enum as follows: 2. RING, 3. COMPLETE, 4. GRID, 5. STAR, 6. BARANDOM, 7. WSRANDOM, 0. CUSTOM (The network and its topology is specified as an adjacency matrix in the CSV file whose name is indicated in the param: ntw_csv_adj_matrix)\nsize Int 5 When the network is randomly generated, it indicates the number of nodes.\nseed Int > 0 N/A Random seed to use.\nn_steps Int > 0 20 Steps to run the simulation for.\nctl_model (0-7) 1 Topology to use for the control network from GraphModel enum. Same values as specified for ntw_topo, plus  1: indicates centralised topology (single control agent).\nk (0. - 1.) 1 If random topo for underlying network (ntw_topo != 0). K parameter to use in randomly generated underlying networks\nB (0. - 1.) 0.5 If random topo for underlying network (ntw_topo != 0). B parameter to use in randomly generated underlying networks.\nctl_k (0. - 1.) 1 If random topo for control network (ctl_model != 0). K parameter to use in randomly generated control networks.\nctl_B (0. - 1.) 0.5 If random topo for control network (ctl_model != 0). B parameter to use in randomly generated control networks.\nntw_csv_adj_matrix String N/A If custom topo for underlying network (ntw_topo == 0), it sets the location of the CSV file containing the adjacency matrix for the underlying network topology.\nctl_csv_adj_matrix String N/A If custom topo for control network (ctl_model == 0), it sets the location of the CSV file containing the adjacency matrix for the control network topology.\nbenchmark Boolean false It activates benchmarks BenchmarkTools.jl for the run. Simulation takes longer when activated.\nout_to_file Boolean false Sent sim output to a file.\ndata_dir String N/A When out_to_file == true, it sets the output data dir.\n–-   ","category":"page"},{"location":"parameters/#Asset-Maintenance-Params","page":"NAssets Simulation Parameters","title":"Asset Maintenance Params","text":"","category":"section"},{"location":"parameters/","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"Param Domain Default Description\ndeterioration NTuple [ (rul,t,a) -> rul - a 0.0 ] Deterioration parameters for network assets. This parameter is used by the deteriorate! function in the physical_model module. This is a NTuple where first element is a function and the other elements are the values of any constant used. The function has at least three arguments, current remaining useful life of the asset (rul) and current tick (t), which are taken from the simulation model. The other parameter a is an arbitrary constant, whose value is defined as the second element of the NTuple. Additional arguments can be added to the function and their values specified as additional elements of the NTuple.\nprediction NTuple [ (rul,t,a) -> rul - a 0.0 ] Function used to predict rul of the assets. Default equal to deterioration.\nmnt_policy Int 0 Maintenance policy used in the simulation. 0: Corrective, 1: Preventive, 2: Custom/Optimal\nmnt_wc_duration Int > 0 0 Worst case duration of the maintenance operations (ticks)\nmnt_bc_duration Int > 0 Best case duration of the maintenance operations (ticks) \nmnt_wc_cost Float > 0. 0 Worst case costs of maintenance operations (££).\nmnt_bc_cost Float > 0. 0 Best case costs of maintenance operations (££).\ndeterioration_threshold (0. - 1.) 0.1 Threshold for deterioration of assets i.e. assets will drop when RUL reaches this.","category":"page"},{"location":"parameters/#Underlying-Network-and-Traffic-Params","page":"NAssets Simulation Parameters","title":"Underlying Network & Traffic Params","text":"","category":"section"},{"location":"parameters/","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"Param Domain/Type Default Description\nntw_services Vector[Tuple(Int,Int)] [] List of pairs of nodes of the underlying network where the traffic is flowing. e.g. [(3,7),(8,2)] indicates that 2 services are running in the underlying network. First service implies there is traffic flowing between assets 3 and 7. Second service, traffic flowing between 8 and 2.\ntraffic_dist_params Vector[Float,Float] [1.0, 0.05] Distribution params (mean, std) for traffic generation.\ntraffic_packets Int > 0 400 Magnitude No. of packets for traffic generation.\nlink_capacity Int > 0 400 Link Capacity/Bandwidth per tick (Packets)\ninterval_tpt Int > 0 10 Ticks used for throughput calculation.\npkt_size Int > 0 1 Packet size for throughput calculations.\npkt_per_tick Int > 0 2000 Default packet processing capacity for all nodes.\ncapacity_factor Float > 0. 1.2 default capacity factor of packets processed per tick\nmax_queue_ne Int > 0 300 Queue size for each node of the underlying network (Packets)","category":"page"},{"location":"parameters/#Control-params","page":"NAssets Simulation Parameters","title":"Control params","text":"","category":"section"},{"location":"parameters/","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"Param Domain/Type Default Description\nprob_random_walks Float > 0. . For distributed control. Probability of neighbour nodes to propagate query msgs when discovering/learning underlying network.\nclear_cache_graph_freq Int > 0 50 frequency for clearing cache of learned graphs by control agents to avoid large outdated graphs.\nmax_msg_live Int > 0 5 Max ticks a control message is live in the simulation.\nofmsg_reattempt Int > 0 10 Frequency for re-attempting un-responded OpenFlow-like messages\nmax_cache_paths Int > 0 2 Max quantity of paths to store in the control agent cache.","category":"page"},{"location":"parameters/#Event-Simulation","page":"NAssets Simulation Parameters","title":"Event Simulation","text":"","category":"section"},{"location":"parameters/","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"Param Domain/Type Default Description\ndrop_proportion Float >= 0. 0. Proportion of nodes that will drop from the network\ndrop_stabilisation Int > 0 10 ticks to wait at the end of simulation after the last node has been dropped.","category":"page"},{"location":"parameters/#Further-customisation","page":"NAssets Simulation Parameters","title":"Further customisation","text":"","category":"section"},{"location":"parameters/","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"Param Domain/Type Default Description\ninit_sne_params (ids=[],ruls=[], deterioration=[],capacity_factor=[],mnt_policy=[],prediction=[]) N/A List of node ids and their specific initial parameters. e.g. (ids=[15,19],ruls=[1,0.7],deterioration=[0.2,0.001],capacity_factor=[1.2,5]). This indicates that for node 15, the starting RUL (Remaining Useful Life) will be 1., the deterioration parameter is 0.2 and the packet capacity is 1.2x (pktpertick) . Likewise, for node 19, starting RUL is 0.7, deterioration 0.001 and capacity factor 5x (pktpertick).\ninit_link_params (ids=[],capacities=[]) N/A List of links (node pairs) and their specific initial  parameters. e.g. (ids=[(15,17),(8,9)],capacities=[200,400]). Setting a capacity of 200 packets per tick for link 15-17 and 400 packets per tick for link 8-9.","category":"page"},{"location":"parameters/","page":"NAssets Simulation Parameters","title":"NAssets Simulation Parameters","text":"","category":"page"}]
}
